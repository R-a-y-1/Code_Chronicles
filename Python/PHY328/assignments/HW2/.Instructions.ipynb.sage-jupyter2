{"backend_state":"ready","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"last_ipynb_save":1713550809248,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"}},"type":"settings"}
{"cell_type":"markdown","id":"12a7cb","input":"----------\n\n## Q1: Feature engineering\n\nLoad the data into a pandas dataframe and split the data into a feature matrix and class labels. How many of each class are there? \n\nDo all the features have similar means and standard deviations? If not, you may need to be careful - features with more variance can dominate the machine learning process. You may want to use sklearn's [StandardScaler](https://scikit-learn.org/stable/modules/preprocessing.html) when creating your feature matrix. If you do this, be sure to explain why.\n\n## Q2: Initial training\n\nTrain a random forest classifier on the data and evaluate the performance using any appropriate metrics you learned about in Lab 6 and Lab 7.\n\n## Q3: Optimising the classifier\n\nBy means of validation curves or grid searches, optimise the hyper-parameters of your classifier and evaluate the performance again. \n\nComment on the performance of your optimised classifier. Where does it do well, and where does it perform badly. If the random forest struggles to classify either pulsars or RFI in particular, can you explain why?\n\n## Q4: Do we need more data?\n\nBy holding back different amounts of the dataset for your test sample, calculate the training score and test score as a function of training data size. This is known as a **learning curve**. See Jake vanderPlas' [Data Science Handbook](https://jakevdp.github.io/PythonDataScienceHandbook/05.03-hyperparameters-and-model-validation.html#Learning-Curves) for more information. As the dataset size increases, the test and training scores should converge to a similar value. If you don't have enough data, the test score will probably be a lot lower than the training score. \n\nBased on your learning curve, comment on whether obtaining more data would be useful for this project.","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"20210b","input":"# Introduction\n\nWhen a star larger than about 8 solar masses reaches the end of its nuclear fuel supply it explodes in a supernova. The surviving core of the star collapses to form a ball of neutron-rich material, supported by neutron degeneracy pressure, of almost unimaginable densities. A teaspoon of neutron star material on Earth would weigh around a billion tonnes.\n\nNeutron stars have similar masses to the Sun, but are the size of a small town. Rapidly rotating neutron stars, with rotation periods ranging from a few seconds down to milliseconds, have surfaces that rotate at a significant fraction of the speed of light.\n\nThe image below (credit: [NRAO](https://public.nrao.edu/gallery/parts-of-a-pulsar/)) shows the emission of radio waves from a **Pulsar**: a rapidly rotating, magnetic neutron star.\n\n![neutron star](images/NRAOPulsar.jpg)\n\nA pulsar can be thought of as a rapidly spinning bar magnet. Relativisitic electrons spinning around the magnetic field lines emit synchrotron radiation at radio wavelengths, which is beamed along the magnetic axis. The magnetic axis can be misaligned with the rotation axis, creating beams of radio waves that sweep through space. If the alignment of the pulsar with respect to Earth is just right, the pulsar can be detected through periodic bursts of radio waves.\n\n## Integrated Pulse Profiles\n\nThese periodic bursts of radio emission are often too weak to detect against the background of radio frequency interference (RFI) that plagues radio telescopes. To increase the strength of a detection, we can add together pulses on the suspected period to form the **integrated pulse profile**. You can think of this like the pulsar's fingerprint - every pulsar has a unique profile shape.\n\n![pulse profiles](images/x6.png)\n\nThis plot from [Seiradakis (1995)](https://www.arxiv-vanity.com/papers/hep-ph/0410022/#bib.bib140) shows some integrated profiles of selected pulsars at a radio frequency of 1.41 GHz.\n\n## Dispersion Measures\n\nThe radio waves from pulsar must travel through space, which is not empty. Free electrons between us and the pulsar delay the arrival of radio waves and do so in a manner which is frequency dependent; i.e. low frequency radio waves arrive slightly later than high frequency ones. \n\nThe **dispersion measure** (DM) is a measure of how badly a pulsar is affected; pulsars with high DM are usually further away and their light has encountered more free electrons on the way to Earth. When searching for pulses, the radio waves must be corrected for the dispersion. This involves assuming some value for the dispersion measure, and using it to correct the delay of radio light of different wavelengths. If the dispersion measure was guessed correctly - the corrected radio pulses will arrive at the same time regardless of frequency, and adding them together provides a strong signal. If the dispersion measure is wrong, the corrected pulses arrive at different times and adding them up creates a weak signal. Therefore, we can create a dispersion measure - signal strength curve. This quantifies how strong the signal is, as a function of dispersion measure - see below:\n\n![dm_snr](images/dm_snr.png)\n\n## A needle in a haystack: searching for real pulsars\n\nThe weak signals of radio pulsars have to be detected against a background of RFI noise from mobile phones, wifi networks, satellite transmitters, garage door openers and [microwaves](https://en.wikipedia.org/wiki/Peryton_(astronomy)).\n\nSpurious detections of \"pulsars\" due to RFI noise vastly outweigh real detections and there is interest in building machine learning pipelines to sort out the real pulsars from the noise. The integrated pulse profile and DM-signal strength curve provide a potential way of doing this. \n\nFrom a single curve we can measure four properties:\n\n - the **mean**: how bright is the signal\n - the **standard deviation**: how broad is the signal\n - the **skew**: is the signal symmetric, or does lean to the right (+ve skew) or left (-ve skew)\n - the **kurtosis**: does the signal have broad tails (+ve kurtosis) or is it tightly peaked (-ve kurtosis)\n \n \nSince we can measure these four properties for the two curves, there are eight possible features to characterise a candidate pulsar detection.\n\nThe [HTRU2 dataset](https://archive.ics.uci.edu/ml/datasets/HTRU2) contains measurements of the eight features above for 1,639 known pulsars and 16,259 additional candidate pulsars that were later revealed to be RFI noise. The dataset is described in full in [this paper](https://arxiv.org/abs/1603.05166). \n\nThis dataset is contained in the sample file `data/pulsar.csv`. Your job in this assignment is to train a random forest classifier to find the real pulsars from the RFI noise.\n\nWork through the questions below in a notebook called `solutions.ipynb`. You can use code cells and markdown cells to explain your work. ","pos":0,"type":"cell"}
{"id":0,"time":1713549861885,"type":"user"}
{"last_load":1711406489755,"type":"file"}